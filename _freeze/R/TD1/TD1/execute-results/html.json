{
  "hash": "683d20a8ce74ca2094c06ce6135aa44e",
  "result": {
    "markdown": "---\ntitle: \"Analyzing Olympic Games : Basic code in R\"\ndate: \"03/03/2024\"\nauthor: Yava Vilar Valera\n---\n\n\nThis series of exercises in R focuses on analyzing data relating to the Olympic infrastructure for the 2024 Games in Paris. We'll be using R's basic functions exclusively to explore, analyze and extract key information about Olympic and Paralympic venues.\n\n\n\n\n\n-   **Read file with database, name and type of columns, number of rows**\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#Lire et nommer le fichier \ndata_ex <- read.csv(\"C:/Users/yavav/Downloads/paris-2024-sites-olympiques-et-paralympiques-franciliens (1).csv\", sep=\";\", dec=\",\", quote=\"\\\"\", na.strings = NA)\n\n#Noms et nature des colonnes \nstr(data_ex)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n'data.frame':\t31 obs. of  4 variables:\n $ geo_point                     : chr  \"48.841319, 2.253076\" \"48.924388, 2.359871\" \"48.92467, 2.332428\" \"48.815115, 2.08208\" ...\n $ nom                           : chr  \"Parc des Princes\" \"Stade de France\" \"Village olympique\" \"Château de Versailles\" ...\n $ sites_olympiques_paralympiques: chr  \"Site olympique\" \"Site olympique,Site paralympique\" \"\" \"Site olympique,Site paralympique\" ...\n $ sports                        : chr  \"Football\" \"Athlétisme,Para athlétisme,Rugby\" \"\" \"Sports équestres,Para équitation,Pentathlon moderne\" ...\n```\n:::\n\n```{.r .cell-code}\n#Nombre de lignes \nnrow(data_ex) \n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 31\n```\n:::\n:::\n\n\nThe dataframe contains 4 columns: geo_point, olympic village, olympic_venues and sports, coded in chr (character), and31 columns.\n\n-   **How many Olympic venues are there?**\n\n\n::: {.cell}\n\n```{.r .cell-code}\nx <- 0\n\nfor (value in data_ex$sites_olympiques_paralympiques) {\n  if (value == \"Site olympique\" | value == \"Site olympique,Site paralympique\") {\n    x <- x + 1\n  } } \n\nprint(paste(\"Número total de Sites olympiques:\", x))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"Número total de Sites olympiques: 26\"\n```\n:::\n:::\n\n\n-   **How many Paralympic venues are there?**\n\n\n::: {.cell}\n\n```{.r .cell-code}\ny <- 0\n\nfor (value in data_ex$sites_olympiques_paralympiques) {\n  if (value == \"Site paralympique\" | value == \"Site olympique,Site paralympique\") {\n    y <- y + 1\n  } } \n\nprint(paste(\"Número total de Sites paralympiques:\", y))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"Número total de Sites paralympiques: 19\"\n```\n:::\n:::\n\n\n-   **Which sites host several sporting disciplines?**\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#On cherche  les cellules de la colonne sports qui continnent des éléments séparés par un virgule, indice d'acceuil de plus d'un sport\n\nsites_plusieurs_sports <- data_ex[grepl(\",\", data_ex$sports), c(\"nom\")]\nsites_plusieurs_sports\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n [1] \"Stade de France\"                                \n [2] \"Château de Versailles\"                          \n [3] \"Grand Palais\"                                   \n [4] \"Invalides\"                                      \n [5] \"Pont d'Iéna\"                                    \n [6] \"Arena Bercy\"                                    \n [7] \"Arena Paris nord\"                               \n [8] \"Arena Paris Sud 6 (Porte de Versailles)\"        \n [9] \"Stade de la Concorde\"                           \n[10] \"Arena Champs de Mars\"                           \n[11] \"Stade Tour Eiffel\"                              \n[12] \"Arena La Chapelle\"                              \n[13] \"Centre aquatique\"                               \n[14] \"Arena Paris Sud 1 (Porte de Versailles)\"        \n[15] \"Arena Paris Sud 4 (Porte de Versailles)\"        \n[16] \"La Défense Arena\"                               \n[17] \"Stade nautique\"                                 \n[18] \"Vélodrome National de Saint-Quentin-en-Yvelines\"\n[19] \"Stade Roland Garros\"                            \n```\n:::\n:::\n\n\n-   **What para-Olympic disciplines are hosted at these venues in the Paris region?**\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndisciplines_plusieurs_sports <- data_ex[grepl(\",\", data_ex$sports), c(\"nom\", \"sports\")] \ndisciplines_plusieurs_sports\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n                                               nom\n2                                  Stade de France\n4                            Château de Versailles\n8                                     Grand Palais\n9                                        Invalides\n11                                     Pont d'Iéna\n12                                     Arena Bercy\n13                                Arena Paris nord\n14         Arena Paris Sud 6 (Porte de Versailles)\n15                            Stade de la Concorde\n17                            Arena Champs de Mars\n18                               Stade Tour Eiffel\n20                               Arena La Chapelle\n22                                Centre aquatique\n23         Arena Paris Sud 1 (Porte de Versailles)\n24         Arena Paris Sud 4 (Porte de Versailles)\n26                                La Défense Arena\n27                                  Stade nautique\n29 Vélodrome National de Saint-Quentin-en-Yvelines\n30                             Stade Roland Garros\n                                                             sports\n2                                  Athlétisme,Para athlétisme,Rugby\n4               Sports équestres,Para équitation,Pentathlon moderne\n8                 Escrime,Escrime fauteuil,Taekwondo,Para taekwondo\n9        Tir à l'arc,Para tir à l'arc,Athlétisme,Cyclisme sur route\n11                                    Cyclisme sur route,Athlétisme\n12     Basketball,Basket fauteuil,Gymnastique artistique,trampoline\n13                Boxe,Escrime,Pentathlon moderne,Volley-ball assis\n14                                  Haltérophilie,Handball,Goalball\n15                 Basketball 3x3,BMX freestyle,Breaking,Skateboard\n17                              Judo,Para judo,Lutte,Rugby fauteuil\n18                                     Volleyball de plage,Cécifoot\n20 Badminton,Para Badminton,Gymnastique rythmique,Para powerlifting\n22                          Natation artistique,Plongeon,Water-polo\n23                                                Volleyball,Boccia\n24                             Tennis de table,Para tennis de table\n26                                Natation,Para natation,Water-polo\n27                              Canoë,Para canoë,Aviron,Para aviron\n29                       Cyclisme sur piste,Para cyclisme sur piste\n30                                      Tennis,Tennis fauteuil,Boxe\n```\n:::\n:::\n\n\nThe resulting dataframe displays the name of the site with its associated disciplines.\n\n-   **Sites with the most followers**\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmax_sports <- max(sapply(strsplit(data_ex$sports, \",\"),length))\n\nfiles_max_sports <- which(sapply(strsplit(data_ex$sports, \",\"),length)==max_sports)\n\ndata_max_sports <- data_ex[files_max_sports, c(\"nom\", \"sports\")]\n\ndata_max_sports\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n                    nom\n8          Grand Palais\n9             Invalides\n12          Arena Bercy\n13     Arena Paris nord\n15 Stade de la Concorde\n17 Arena Champs de Mars\n20    Arena La Chapelle\n27       Stade nautique\n                                                             sports\n8                 Escrime,Escrime fauteuil,Taekwondo,Para taekwondo\n9        Tir à l'arc,Para tir à l'arc,Athlétisme,Cyclisme sur route\n12     Basketball,Basket fauteuil,Gymnastique artistique,trampoline\n13                Boxe,Escrime,Pentathlon moderne,Volley-ball assis\n15                 Basketball 3x3,BMX freestyle,Breaking,Skateboard\n17                              Judo,Para judo,Lutte,Rugby fauteuil\n20 Badminton,Para Badminton,Gymnastique rythmique,Para powerlifting\n27                              Canoë,Para canoë,Aviron,Para aviron\n```\n:::\n:::\n\n\nWe can see that there are a total of 8 venues hosting a total of 4 sports each.\n\n-   **Which discipline will take place at the greatest number of venues? What are these venues?**\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Conter la fréquence de chaque discipline\nfrequence_disciplines <- table(unlist(strsplit(data_ex$sports, \",\")))\n\n# Discipline avec plus grande fréquence\ndiscipline_plus_frequente <- names(frequence_disciplines)[which.max(frequence_disciplines)]\n\n# Résultat\ncat(\"La discipline qui aura lieu sur le plus grand nombre de sites est:\", discipline_plus_frequente, \"\\n\")\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nLa discipline qui aura lieu sur le plus grand nombre de sites est: Athlétisme \n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# Filtrer les sites qui incluent le mot \"Athlétisme\" dans la colonne Discipline\nsites_atletisme <- data_ex[grepl(\"Athlétisme\", data_ex$sports, ignore.case = TRUE), c(\"nom\", \"sports\")]\n\n# Imprimer les résultats\ncat(\"Les sites où l'athlétisme aura lieu sont les suivants:\\n\")\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nLes sites où l'athlétisme aura lieu sont les suivants:\n```\n:::\n\n```{.r .cell-code}\nprint(sites_atletisme)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n                                   nom\n2                      Stade de France\n6  Terrain des Essences - La Courneuve\n9                            Invalides\n11                         Pont d'Iéna\n25             Hôtel de ville de Paris\n                                                       sports\n2                            Athlétisme,Para athlétisme,Rugby\n6                                             Para athlétisme\n9  Tir à l'arc,Para tir à l'arc,Athlétisme,Cyclisme sur route\n11                              Cyclisme sur route,Athlétisme\n25                                                 Athlétisme\n```\n:::\n:::\n\n\nAthletics will be held at 5 venues in Paris.\n\n-   **Which are the two nearest venues?**\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#Libraires \n\nlibrary(geosphere)\nlibrary(tidyr)\n\n#Séparer les coordonnées géographiques en deux colonnes par la virgule \n\ndata_ex <- separate(data_ex, geo_point, into = c(\"lat\", \"long\"), sep = \", \")\n\n# Fonction pour calculer la distance euclidienne\n\ndata_ex$lat <- as.numeric(data_ex$lat)\ndata_ex$long <- as.numeric(data_ex$long)\n\ndistances <- distHaversine(data_ex[, c(\"long\", \"lat\")])\nprint(distances)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n [1] 12109.0289  2007.5022 22017.3512 28908.6007  1204.2823 36658.5531\n [7] 26702.8086   422.2544 11450.5703 13052.7520  6674.7313 18001.9809\n[13] 22981.5082  4582.2876  8949.4822  9269.0396   436.5820 20677.9533\n[19] 27022.4177 10476.8609 12176.4034 11437.7799   419.6006  5441.5332\n[25]  9902.1865 30003.3283 42913.1029  5092.1872 16782.0752 23146.9519\n```\n:::\n\n```{.r .cell-code}\n# Matrice pour garder les distances\ndistances <- matrix(NA, nrow = nrow(data_ex), ncol = nrow(data_ex))\n\n# Calculer les distances entre toutes les coordonnées avec un boucle \nfor (i in 1:(nrow(data_ex) - 1)) {\n  for (j in (i + 1):nrow(data_ex)) {\n    distances[i, j] <- distHaversine(\n      c(data_ex$lat[i], data_ex$long[i]),\n      c(data_ex$lat[j], data_ex$long[j])\n    )\n    distances[j, i] <- distances[i, j]  # Symétrie\n  }\n}\n\n# Convertir la matirce en dataframe\ndistances_df <- as.data.frame(distances)\n\n#Le sites les plus proches\nmin_distance <- min(distances_df, na.rm=TRUE)\nmin_distance \n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 91.69166\n```\n:::\n\n```{.r .cell-code}\n#Min distances\nmin_distannce <- which(distances_df==min_distance, arr.ind=TRUE)\nmin_distannce\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n     row col\n[1,]  29  19\n[2,]  19  29\n```\n:::\n:::\n\n\nThe minimum distance is 91.69 km, identified by min_distance. Min_distannce identifies the row and column of the 91.69 value within the matrix. This corresponds to the names of the sites in columns 19 and 29 of the dataframe data_ex. Stade BMX de Saint-Quentin-en-Yvelines and Vélodrome National de Saint-Quentin-en-Yvelines are the nearest sites.\n\n-   **Which are the most distant sites**\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmax_distance <- max(distances_df, na.rm=TRUE)\nprint(max_distance)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 74882.55\n```\n:::\n\n```{.r .cell-code}\nmax_distannce <- which(distances_df==max_distance, arr.ind=TRUE)\nmax_distannce\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n     row col\n[1,]  27   7\n[2,]   7  27\n```\n:::\n:::\n\n\nColline d'Elancourt (7) and Stade Nautique (27) are the furthest away, with a distance of 74882.55 km.\n\n-   **Apartment at the center of gravity of all Olympic sites**\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Calculer les coordonnées moyennes (barycentriques)\nbarycentre <- c(mean(data_ex$lat), mean(data_ex$long))\n\n# Trouver le site le plus proche du barycentre\nsite_proche_barycentre <- data_ex[which.min(geosphere::distVincentySphere(barycentre, cbind(data_ex$lat, data_ex$long))), ]\n\nsite_proche_barycentre\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n        lat     long               nom   sites_olympiques_paralympiques\n18 48.85723 2.296084 Stade Tour Eiffel Site olympique,Site paralympique\n                         sports\n18 Volleyball de plage,Cécifoot\n```\n:::\n:::\n\n\nThe Eiffel Tower Stadium is at the center of all the Olympic venues.\n",
    "supporting": [
      "TD1_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}